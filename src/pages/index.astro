---
const isRobertWorking = (() => {
  const random = Math.random();
  if (random < 0.8) {
    return "No";
  }
  if (random < 0.9) {
    return "Yes";
  }
  return "Maybe";
})();
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Is Robert Working?</title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Fascinate+Inline&display=swap"
      rel="stylesheet"
    />
    <style>
      html {
        font: 5vmin/1.3 Serif;
        overflow: hidden;
        background: #123;
      }

      body {
        font-family: "Fascinate Inline", system-ui, sans-serif;
        height: 100dvh;
        display: block;
        font-size: 52px;
      }

      body::before,
      body::after {
        position: fixed;
        top: 50%;
        left: 50%;
        width: 3em;
        height: 3em;
        content: ".";
        mix-blend-mode: screen;
        animation: 44s -27s move infinite ease-in-out alternate;
      }

      body::before {
        text-shadow:
          0.2939449898em 1.3588217239em 7px rgba(0, 107, 255, 0.9),
          0.3923867789em -0.2367931271em 7px rgba(86, 0, 255, 0.9),
          1.5780350392em 0.9037346237em 7px rgba(172, 0, 255, 0.9),
          2.4726920012em 2.141827771em 7px rgba(195, 0, 255, 0.9),
          1.1771926804em -0.0897848363em 7px rgba(46, 0, 255, 0.9),
          -0.4800101879em 1.521763011em 7px rgba(2, 0, 255, 0.9),
          -0.0105386326em 0.2685829746em 7px rgba(0, 255, 151, 0.9),
          0.4034661232em 0.7171708107em 7px rgba(255, 0, 165, 0.9),
          0.1090301354em 1.1020989555em 7px rgba(214, 0, 255, 0.9),
          1.9575756519em 0.7965603268em 7px rgba(255, 0, 72, 0.9),
          0.9758507768em 2.0587599264em 7px rgba(255, 59, 0, 0.9),
          0.313109728em 1.850452131em 7px rgba(0, 235, 255, 0.9),
          1.576867335em -0.2979223234em 7px rgba(0, 255, 117, 0.9),
          1.2533449854em 0.270635749em 7px rgba(0, 255, 214, 0.9),
          1.3872328762em 1.8940832899em 7px rgba(255, 0, 177, 0.9),
          0.5599533754em 2.2948758617em 7px rgba(0, 81, 255, 0.9),
          1.6057138753em 2.3385130865em 7px rgba(255, 0, 187, 0.9),
          -0.3333006697em 0.7272030797em 7px rgba(0, 255, 180, 0.9),
          -0.4427322906em 0.6631921821em 7px rgba(236, 0, 255, 0.9),
          -0.1226805802em 0.8776521193em 7px rgba(255, 0, 191, 0.9),
          0.5480612994em 0.4230242851em 7px rgba(0, 29, 255, 0.9),
          0.5753103581em 1.2631616859em 7px rgba(255, 0, 33, 0.9),
          1.8249783515em 2.0921121414em 7px rgba(74, 0, 255, 0.9),
          1.9766204552em 1.9438928512em 7px rgba(0, 255, 143, 0.9),
          2.2437104018em 1.4849337989em 7px rgba(103, 255, 0, 0.9),
          2.1844223856em 0.0028811265em 7px rgba(163, 0, 255, 0.9),
          1.9136890984em 2.389087079em 7px rgba(255, 0, 223, 0.9),
          -0.0262560787em 1.4581182009em 7px rgba(255, 21, 0, 0.9),
          1.9439954007em 0.2823090198em 7px rgba(0, 46, 255, 0.9),
          1.4865013179em -0.3943867634em 7px rgba(97, 0, 255, 0.9),
          0.1870011819em 2.194296621em 7px rgba(255, 0, 21, 0.9),
          -0.2905727503em 0.451163436em 7px rgba(26, 255, 0, 0.9),
          1.7724843348em -0.4856521238em 7px rgba(0, 255, 199, 0.9),
          2.3158776274em 0.4107840518em 7px rgba(255, 0, 230, 0.9),
          0.9257006386em 1.7103963294em 7px rgba(255, 0, 179, 0.9),
          2.1512133134em -0.3745938392em 7px rgba(78, 255, 0, 0.9),
          2.0957369642em 1.7902869006em 7px rgba(255, 0, 224, 0.9),
          0.0258249788em 0.8966847082em 7px rgba(138, 255, 0, 0.9),
          1.5936608254em 2.4502530573em 7px rgba(28, 255, 0, 0.9),
          0.1888132938em 2.4960469908em 7px rgba(0, 255, 202, 0.9),
          -0.0530493206em -0.2061939422em 7px rgba(0, 255, 190, 0.9);
        animation-duration: 44s;
        animation-delay: -27s;
      }

      body::after {
        text-shadow:
          0.6115488194em -0.3669248003em 7px rgba(0, 255, 86, 0.9),
          0.9200587522em 1.1967091108em 7px rgba(194, 0, 255, 0.9),
          0.6013375607em 0.408167669em 7px rgba(191, 255, 0, 0.9),
          -0.1421499012em 1.1418397389em 7px rgba(255, 0, 54, 0.9),
          0.6571289641em 1.7095348212em 7px rgba(255, 0, 8, 0.9),
          0.6436453362em 1.9836225682em 7px rgba(46, 0, 255, 0.9),
          1.0400499891em 0.9140853719em 7px rgba(0, 255, 131, 0.9),
          1.9608880613em 0.7950827465em 7px rgba(55, 0, 255, 0.9),
          -0.254851894em 1.6032631682em 7px rgba(255, 0, 58, 0.9),
          1.8401849907em 2.4327451453em 7px rgba(255, 0, 251, 0.9),
          0.2952257718em -0.3408396454em 7px rgba(255, 0, 59, 0.9),
          -0.0470561278em -0.0065947847em 7px rgba(0, 255, 18, 0.9),
          0.2554828627em 0.1501417822em 7px rgba(238, 0, 255, 0.9),
          -0.1879757652em 1.2619618305em 7px rgba(255, 27, 0, 0.9),
          2.1932205446em 0.18302376em 7px rgba(0, 205, 255, 0.9),
          1.1626181301em 1.1144636445em 7px rgba(255, 89, 0, 0.9),
          2.2740855529em 1.348471701em 7px rgba(0, 147, 255, 0.9),
          0.9240221244em 2.1158405087em 7px rgba(255, 0, 104, 0.9),
          0.2428242176em -0.2713346149em 7px rgba(201, 0, 255, 0.9),
          0.7095527848em -0.3761249903em 7px rgba(0, 255, 165, 0.9),
          0.3986745647em 0.092060825em 7px rgba(0, 69, 255, 0.9),
          1.5676963748em 1.1539111021em 7px rgba(110, 0, 255, 0.9),
          1.5561112007em -0.4496960329em 7px rgba(255, 0, 231, 0.9),
          0.4312027354em 0.6772787381em 7px rgba(247, 255, 0, 0.9),
          0.7271335673em 0.2292870844em 7px rgba(255, 0, 33, 0.9),
          -0.0366248295em 1.5749899467em 7px rgba(0, 63, 255, 0.9),
          -0.306817649em 2.2732826578em 7px rgba(0, 132, 255, 0.9),
          1.7364895368em 1.6063993936em 7px rgba(0, 255, 241, 0.9),
          2.25783699em 2.4183065072em 7px rgba(46, 255, 0, 0.9),
          -0.0584398866em 1.5213051202em 7px rgba(0, 255, 169, 0.9),
          0.3582913572em 0.3205619434em 7px rgba(141, 0, 255, 0.9),
          -0.2179790937em 0.8592053639em 7px rgba(0, 255, 233, 0.9),
          -0.2153106594em 1.1151232465em 7px rgba(0, 102, 255, 0.9),
          2.2734745698em 0.2422828522em 7px rgba(0, 255, 63, 0.9),
          0.121587396em 2.1415465638em 7px rgba(0, 78, 255, 0.9),
          -0.1781068786em -0.4984258914em 7px rgba(0, 176, 255, 0.9),
          1.5035758572em 2.2725697018em 7px rgba(185, 255, 0, 0.9),
          1.6112913249em 0.0708966371em 7px rgba(0, 184, 255, 0.9),
          1.9910617244em 0.5406298745em 7px rgba(255, 0, 19, 0.9),
          0.4339723304em -0.2649939104em 7px rgba(0, 255, 108, 0.9),
          2.1731465787em 1.0963817992em 7px rgba(254, 0, 255, 0.9);
        animation-duration: 43s;
        animation-delay: -32s;
      }

      @keyframes move {
        from {
          transform: rotate(0deg) scale(12) translateX(-20px);
        }
        to {
          transform: rotate(360deg) scale(18) translateX(20px);
        }
      }

      main {
        color: #fef;
        height: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
      }

      .gradient-text {
        background-image: linear-gradient(90deg, #fef, #e79db2);
        filter: drop-shadow(0 0 0.5rem #7d3a5c);

        background-size: 100%;
        background-repeat: repeat;

        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        -moz-background-clip: text;
        -moz-text-fill-color: transparent;
      }

      h1 {
        font-size: 90px;
      }

      .fade-in {
        animation: fadeIn 5s;
      }
      @keyframes fadeIn {
        0% {
          filter: blur(50px);
          opacity: 0;
        }
        100% {
          filter: blur(0px);
          opacity: 1;
        }
      }
    </style>
  </head>
  <body>
    <div class="bg"></div>
    <main>
      <h1 class="gradient-text fade-in">{isRobertWorking}</h1>
    </main>
  </body>
</html>
